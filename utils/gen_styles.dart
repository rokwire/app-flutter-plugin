import 'dart:convert';
import 'dart:io';

Map<String, String> classMap = {
  'color': 'AppColors',
  'text_style': 'AppTextStyles',
  'font_family': 'AppFontFamilies',
  'image': 'AppImages',
};

Map<String, String> typesMap = {
  'color': 'Color?',
  'text_style': 'TextStyle?',
  'font_family': 'String?',
  'image': 'Widget?',
};

Map<String, String> refsMap = {
  'color': 'Styles().colors?.getColor(%key)',
  'text_style': 'Styles().textStyles?.getTextStyle(%key)',
  'font_family': 'Styles().fontFamilies?.fromCode(%key)',
  'image': 'Styles().images?.getImage(%key)',
};

String capitalize(String s) => s[0].toUpperCase() + s.substring(1);

String camelCase(String s, {bool startUpper = false}) {
  List<String> parts = s.split(RegExp(r'[_\-.]'));
  String out = '';
  for (String part in parts) {
    if (out.isEmpty && !startUpper) {
      out += part;
    } else {
      out += capitalize(part);
    }
  }
  return out;
}

void main() async {
  String assetFilepath = 'assets/styles.json';
  String genFilepath = 'lib/gen/styles.dart';

  Map<String, dynamic>? asset = await _loadFileJson(assetFilepath);
  if (asset != null) {
    String fileString = _parseAsset(asset);
    if (fileString.isNotEmpty) {
      File(genFilepath).writeAsString(fileString);
      print("saved generated file to $genFilepath");
    }
  } else {
    print('asset was not loaded');
  }
}

String _parseAsset(Map<String, dynamic> asset) {
  List<String> classStrings = [];
  for (MapEntry<String, dynamic> entry in asset.entries) {
    if (entry.value is Map<String, dynamic>) {
      String? classString = _buildClass(entry.key, entry.value);
      if (classString != null) {
        classStrings.add(classString);
      }
    } else {
      print("unexpected structure type: ${entry.value}");
    }
  }
  return _buildFile(classStrings);
}

String? _buildClass(String name, Map<String, dynamic> json) {
  String? className = classMap[name];
  String? type = typesMap[name];
  String? ref = refsMap[name];
  if (className == null || type == null || ref == null) {
    return null;
  }

  String classString = "class $className {\n";
  for (MapEntry<String, dynamic> entry in json.entries) {
    classString += "    static $type ${camelCase(entry.key)} = ${ref.replaceAll("%key", "'${entry.key}'")};\n";
  }
  classString += "}\n";
  return classString;
}

String _buildFile(List<String> classStrings) {
  String fileString = "// Code generated by plugin/utils/gen_styles.dart DO NOT EDIT.\n\n";
  fileString += "import 'package:rokwire_plugin/service/styles.dart';\n";
  fileString += "import 'package:flutter/material.dart';\n";
  fileString += "\n";
  fileString += classStrings.join("\n");
  return fileString;
}

Future<Map<String, dynamic>?> _loadFileJson(String filepath) async {
  try {
    String content = File(filepath).readAsStringSync();
    return json.decode(content);
  } catch (e) {
    print(e);
  }
  return null;
}