// Code generated by plugin/utils/gen_styles.dart DO NOT EDIT.

import 'package:rokwire_plugin/service/styles.dart';
import 'package:rokwire_plugin/ui/widgets/ui_image.dart';
import 'package:flutter/material.dart';

class AppThemes {
    static String get system => 'system';
}

class AppColors {
    static Color get fillColorPrimary => Styles().colors?.getColor('fillColorPrimary') ?? const Color(0xFF002855);
    static Color get fillColorPrimaryVariant => Styles().colors?.getColor('fillColorPrimaryVariant') ?? const Color(0xFF0F2040);
    static Color get fillColorSecondary => Styles().colors?.getColor('fillColorSecondary') ?? const Color(0xFFE84A27);
    static Color get fillColorSecondaryVariant => Styles().colors?.getColor('fillColorSecondaryVariant') ?? const Color(0xFFCF3C1B);
    static Color get textPrimary => Styles().colors?.getColor('textPrimary') ?? const Color(0xFFFFFFFF);
    static Color get textAccent => Styles().colors?.getColor('textAccent') ?? const Color(0xFF002855);
    static Color get textDark => Styles().colors?.getColor('textDark') ?? const Color(0xFFFFFFFF);
    static Color get textMedium => Styles().colors?.getColor('textMedium') ?? const Color(0xFFFFFFFF);
    static Color get textLight => Styles().colors?.getColor('textLight') ?? const Color(0xFFFFFFFF);
    static Color get textDisabled => Styles().colors?.getColor('textDisabled') ?? const Color(0xFFBDBDBD);
    static Color get iconPrimary => Styles().colors?.getColor('iconPrimary') ?? const Color(0xFF002855);
    static Color get iconLight => Styles().colors?.getColor('iconLight') ?? const Color(0xFFFFFFFF);
    static Color get iconDark => Styles().colors?.getColor('iconDark') ?? const Color(0xFF404040);
    static Color get iconMedium => Styles().colors?.getColor('iconMedium') ?? const Color(0xFFFFFFFF);
    static Color get iconDisabled => Styles().colors?.getColor('iconDisabled') ?? const Color(0xFFBDBDBD);
    static Color get surface => Styles().colors?.getColor('surface') ?? const Color(0xFFFFFFFF);
    static Color get surfaceAccent => Styles().colors?.getColor('surfaceAccent') ?? const Color(0xFFDADDE1);
    static Color get background => Styles().colors?.getColor('background') ?? const Color(0xFFF5F5F5);
    static Color get backgroundVariant => Styles().colors?.getColor('backgroundVariant') ?? const Color(0xFFE8E9EA);
    static Color get shadow => Styles().colors?.getColor('shadow') ?? const Color(0x30000000);
    static Color get gradientColorPrimary => Styles().colors?.getColor('gradientColorPrimary') ?? const Color(0xFF244372);
    static Color get accentColor1 => Styles().colors?.getColor('accentColor1') ?? const Color(0xFFE84A27);
    static Color get accentColor2 => Styles().colors?.getColor('accentColor2') ?? const Color(0xFF5FA7A3);
    static Color get accentColor3 => Styles().colors?.getColor('accentColor3') ?? const Color(0xFF5182CF);
    static Color get accentColor4 => Styles().colors?.getColor('accentColor4') ?? const Color(0xFF9318BB);
    static Color get success => Styles().colors?.getColor('success') ?? const Color(0xFF2E7D32);
    static Color get alert => Styles().colors?.getColor('alert') ?? const Color(0xFFff0000);
    static Color get dividerLine => Styles().colors?.getColor('dividerLine') ?? const Color(0xFF535353);
}

class AppFontFamilies {
    static String get black => Styles().fontFamilies?.fromCode('black') ?? 'ProximaNovaBlack';
    static String get blackItalic => Styles().fontFamilies?.fromCode('black_italic') ?? 'ProximaNovaBlackIt';
    static String get bold => Styles().fontFamilies?.fromCode('bold') ?? 'ProximaNovaBold';
    static String get boldItalic => Styles().fontFamilies?.fromCode('bold_italic') ?? 'ProximaNovaBoldIt';
    static String get extraBold => Styles().fontFamilies?.fromCode('extra_bold') ?? 'ProximaNovaExtraBold';
    static String get extraBoldItalic => Styles().fontFamilies?.fromCode('extra_bold_italic') ?? 'ProximaNovaExtraBoldIt';
    static String get light => Styles().fontFamilies?.fromCode('light') ?? 'ProximaNovaLight';
    static String get lightItalic => Styles().fontFamilies?.fromCode('light_italic') ?? 'ProximaNovaLightIt';
    static String get medium => Styles().fontFamilies?.fromCode('medium') ?? 'ProximaNovaMedium';
    static String get mediumItalic => Styles().fontFamilies?.fromCode('medium_italic') ?? 'ProximaNovaMediumIt';
    static String get regular => Styles().fontFamilies?.fromCode('regular') ?? 'ProximaNovaRegular';
    static String get regularItalic => Styles().fontFamilies?.fromCode('regular_italic') ?? 'ProximaNovaRegularIt';
    static String get semiBold => Styles().fontFamilies?.fromCode('semi_bold') ?? 'ProximaNovaSemiBold';
    static String get semiBoldItalic => Styles().fontFamilies?.fromCode('semi_bold_italic') ?? 'ProximaNovaSemiBoldIt';
    static String get thin => Styles().fontFamilies?.fromCode('thin') ?? 'ProximaNovaThin';
    static String get thinItalic => Styles().fontFamilies?.fromCode('thin_italic') ?? 'ProximaNovaThinIt';
}

class AppTextStyles {
    static TextStyle get appTitle => Styles().textStyles?.getTextStyle('app_title') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 42.0, color: AppColors.textLight);
    static TextStyle get headerBar => Styles().textStyles?.getTextStyle('header_bar') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textLight);
    static TextStyle get headerBarAccent => Styles().textStyles?.getTextStyle('header_bar.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textLight);
    static TextStyle get widgetHeadingExtraLarge => Styles().textStyles?.getTextStyle('widget.heading.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 30.0, color: AppColors.textLight);
    static TextStyle get widgetHeadingExtraLargeBold => Styles().textStyles?.getTextStyle('widget.heading.extra_large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 30.0, color: AppColors.textLight);
    static TextStyle get widgetHeadingLarge => Styles().textStyles?.getTextStyle('widget.heading.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.textLight);
    static TextStyle get widgetHeadingLargeBold => Styles().textStyles?.getTextStyle('widget.heading.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textLight);
    static TextStyle get widgetHeadingRegular => Styles().textStyles?.getTextStyle('widget.heading.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textLight);
    static TextStyle get widgetHeadingRegularBold => Styles().textStyles?.getTextStyle('widget.heading.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textLight);
    static TextStyle get widgetHeadingMedium => Styles().textStyles?.getTextStyle('widget.heading.medium') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textLight);
    static TextStyle get widgetHeadingSmall => Styles().textStyles?.getTextStyle('widget.heading.small') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textLight);
    static TextStyle get widgetMessageDarkExtraLarge => Styles().textStyles?.getTextStyle('widget.message.dark.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.textDark);
    static TextStyle get widgetMessageDarkMedium => Styles().textStyles?.getTextStyle('widget.message.dark.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetMessageExtraLargeBold => Styles().textStyles?.getTextStyle('widget.message.extra_large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.textPrimary, height: 1);
    static TextStyle get widgetMessageLargeBold => Styles().textStyles?.getTextStyle('widget.message.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textPrimary, height: 1);
    static TextStyle get widgetMessageLarge => Styles().textStyles?.getTextStyle('widget.message.large') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 20.0, color: AppColors.textPrimary, height: 1);
    static TextStyle get widgetMessageLargeDarkBold => Styles().textStyles?.getTextStyle('widget.message.large.dark.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textDark, height: 1);
    static TextStyle get widgetMessageRegularPrimaryBold => Styles().textStyles?.getTextStyle('widget.message.regular.primary.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.fillColorPrimary, height: 1);
    static TextStyle get widgetMessageRegularPrimary => Styles().textStyles?.getTextStyle('widget.message.regular.primary') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.fillColorPrimary, height: 1);
    static TextStyle get widgetMessageLightBoldPrimary => Styles().textStyles?.getTextStyle('widget.message.light.bold.primary') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textMedium, height: 1);
    static TextStyle get widgetMessageMedium => Styles().textStyles?.getTextStyle('widget.message.medium') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textPrimary, height: 1);
    static TextStyle get widgetMessageRegular => Styles().textStyles?.getTextStyle('widget.message.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textPrimary, height: 1);
    static TextStyle get widgetMessageRegularBold => Styles().textStyles?.getTextStyle('widget.message.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary, height: 1);
    static TextStyle get widgetMessageRegularBoldAccent => Styles().textStyles?.getTextStyle('widget.message.regular.bold.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textDark, height: 1);
    static TextStyle get widgetMessageSmall => Styles().textStyles?.getTextStyle('widget.message.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textPrimary, height: 1);
    static TextStyle get widgetMessageSmallPrimaryBold => Styles().textStyles?.getTextStyle('widget.message.small.primary.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.fillColorPrimary, height: 1);
    static TextStyle get widgetMessageLightRegular => Styles().textStyles?.getTextStyle('widget.message.light.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textMedium, height: 1);
    static TextStyle get widgetTitleExtraLarge => Styles().textStyles?.getTextStyle('widget.title.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.textPrimary);
    static TextStyle get widgetTitleLarge => Styles().textStyles?.getTextStyle('widget.title.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.textPrimary);
    static TextStyle get widgetTitleLargeBold => Styles().textStyles?.getTextStyle('widget.title.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textPrimary);
    static TextStyle get widgetTitleMedium => Styles().textStyles?.getTextStyle('widget.title.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.textPrimary);
    static TextStyle get widgetTitleMediumBold => Styles().textStyles?.getTextStyle('widget.title.medium.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textPrimary);
    static TextStyle get widgetTitleRegular => Styles().textStyles?.getTextStyle('widget.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetTitleSmallBold => Styles().textStyles?.getTextStyle('widget.title.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textPrimary);
    static TextStyle get widgetTitleTiny => Styles().textStyles?.getTextStyle('widget.title.tiny') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textPrimary);
    static TextStyle get widgetTitleAccentExtraLarge => Styles().textStyles?.getTextStyle('widget.title.accent.extra_large') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentLarge => Styles().textStyles?.getTextStyle('widget.title.accent.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentLargeBold => Styles().textStyles?.getTextStyle('widget.title.accent.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentMedium => Styles().textStyles?.getTextStyle('widget.title.accent.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentMediumBold => Styles().textStyles?.getTextStyle('widget.title.accent.medium.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentRegular => Styles().textStyles?.getTextStyle('widget.title.accent.regular') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentSmallBold => Styles().textStyles?.getTextStyle('widget.title.accent.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textAccent);
    static TextStyle get widgetTitleAccentTiny => Styles().textStyles?.getTextStyle('widget.title.accent.tiny') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textAccent);
    static TextStyle get widgetDetailLarge => Styles().textStyles?.getTextStyle('widget.detail.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.textDark);
    static TextStyle get widgetDetailLargeBold => Styles().textStyles?.getTextStyle('widget.detail.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textDark);
    static TextStyle get widgetDetailRegularBold => Styles().textStyles?.getTextStyle('widget.detail.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetDetailRegular => Styles().textStyles?.getTextStyle('widget.detail.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetDetailMedium => Styles().textStyles?.getTextStyle('widget.detail.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetDetailSmall => Styles().textStyles?.getTextStyle('widget.detail.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textDark);
    static TextStyle get widgetDetailLightRegular => Styles().textStyles?.getTextStyle('widget.detail.light.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textMedium);
    static TextStyle get widgetDescriptionLarge => Styles().textStyles?.getTextStyle('widget.description.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.textPrimary);
    static TextStyle get widgetDescriptionMedium => Styles().textStyles?.getTextStyle('widget.description.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.textPrimary);
    static TextStyle get widgetDescriptionRegularThin => Styles().textStyles?.getTextStyle('widget.description.regular.thin') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetDescriptionRegular => Styles().textStyles?.getTextStyle('widget.description.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetDescriptionRegularBold => Styles().textStyles?.getTextStyle('widget.description.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetDescriptionSmall => Styles().textStyles?.getTextStyle('widget.description.small') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.textPrimary);
    static TextStyle get widgetDescriptionSmallUnderline => Styles().textStyles?.getTextStyle('widget.description.small_underline') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, decoration: TextDecoration.underline, color: AppColors.textPrimary);
    static TextStyle get widgetDescriptionSmallBold => Styles().textStyles?.getTextStyle('widget.description.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textPrimary);
    static TextStyle get widgetDescriptionSmallBoldSemiExpanded => Styles().textStyles?.getTextStyle('widget.description.small.bold.semi_expanded') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textPrimary, letterSpacing: 0.86);
    static TextStyle get widgetSuccessRegular => Styles().textStyles?.getTextStyle('widget.success.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.success);
    static TextStyle get widgetSuccessRegularBold => Styles().textStyles?.getTextStyle('widget.success.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.success);
    static TextStyle get widgetErrorRegular => Styles().textStyles?.getTextStyle('widget.error.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.alert);
    static TextStyle get widgetErrorRegularBold => Styles().textStyles?.getTextStyle('widget.error.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.alert);
    static TextStyle get widgetItemMediumBold => Styles().textStyles?.getTextStyle('widget.item.medium.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textDark);
    static TextStyle get widgetItemMedium => Styles().textStyles?.getTextStyle('widget.item.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.textDark);
    static TextStyle get widgetItemRegularBold => Styles().textStyles?.getTextStyle('widget.item.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetItemRegularThin => Styles().textStyles?.getTextStyle('widget.item.regular.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetItemRegular => Styles().textStyles?.getTextStyle('widget.item.regular') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetItemSmallBold => Styles().textStyles?.getTextStyle('widget.item.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textDark);
    static TextStyle get widgetItemSmall => Styles().textStyles?.getTextStyle('widget.item.small') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.textDark);
    static TextStyle get widgetItemSmallThin => Styles().textStyles?.getTextStyle('widget.item.small.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textDark);
    static TextStyle get widgetItemTinyBold => Styles().textStyles?.getTextStyle('widget.item.tiny.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textDark);
    static TextStyle get widgetItemTiny => Styles().textStyles?.getTextStyle('widget.item.tiny') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 12.0, color: AppColors.textDark);
    static TextStyle get widgetItemTinyThin => Styles().textStyles?.getTextStyle('widget.item.tiny.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textDark);
    static TextStyle get widgetInfoRegular => Styles().textStyles?.getTextStyle('widget.info.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textLight);
    static TextStyle get widgetInfoRegularBold => Styles().textStyles?.getTextStyle('widget.info.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textLight);
    static TextStyle get widgetInfoSmall => Styles().textStyles?.getTextStyle('widget.info.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textLight);
    static TextStyle get widgetInfoSmallBold => Styles().textStyles?.getTextStyle('widget.info.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textLight);
    static TextStyle get widgetTabSelected => Styles().textStyles?.getTextStyle('widget.tab.selected') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetTabNotSelected => Styles().textStyles?.getTextStyle('widget.tab.not_selected') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetButtonTitleRegular => Styles().textStyles?.getTextStyle('widget.button.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textPrimary);
    static TextStyle get widgetButtonTitleMedium => Styles().textStyles?.getTextStyle('widget.button.title.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetButtonTitleMediumBold => Styles().textStyles?.getTextStyle('widget.button.title.medium.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetButtonTitleMediumThin => Styles().textStyles?.getTextStyle('widget.button.title.medium.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetButtonTitleMediumBoldUnderline => Styles().textStyles?.getTextStyle('widget.button.title.medium.bold.underline') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonTitleMediumUnderline => Styles().textStyles?.getTextStyle('widget.button.title.medium.underline') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonTitleMediumLightUnderline => Styles().textStyles?.getTextStyle('widget.button.title.medium.light.underline') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textLight, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.textLight);
    static TextStyle get widgetButtonTitleEnabled => Styles().textStyles?.getTextStyle('widget.button.title.enabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetButtonTitleDisabled => Styles().textStyles?.getTextStyle('widget.button.title.disabled') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textDisabled);
    static TextStyle get widgetButtonTitleSmallUnderline => Styles().textStyles?.getTextStyle('widget.button.title.small.underline') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textPrimary, decoration: TextDecoration.underline, decorationStyle: TextDecorationStyle.solid, decorationThickness: 1.0, decorationColor: AppColors.fillColorSecondary);
    static TextStyle get widgetButtonDescriptionSmall => Styles().textStyles?.getTextStyle('widget.button.description.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textDark);
    static TextStyle get widgetButtonDescriptionTiny => Styles().textStyles?.getTextStyle('widget.button.description.tiny') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textDark);
    static TextStyle get widgetColourfulButtonTitleTitleRegular => Styles().textStyles?.getTextStyle('widget.colourful_button.title.title.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textLight);
    static TextStyle get widgetColourfulButtonTitleTitleAccent => Styles().textStyles?.getTextStyle('widget.colourful_button.title.title.accent') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textLight);
    static TextStyle get widgetInputFieldTextMedium => Styles().textStyles?.getTextStyle('widget.input_field.text.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 18.0, color: AppColors.textDark);
    static TextStyle get widgetInputFieldTextRegular => Styles().textStyles?.getTextStyle('widget.input_field.text.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetDialogButtonClose => Styles().textStyles?.getTextStyle('widget.dialog.button.close') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 50.0, color: AppColors.textLight);
    static TextStyle get widgetDialogMessageMedium => Styles().textStyles?.getTextStyle('widget.dialog.message.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textLight);
    static TextStyle get widgetDialogMessageMediumThin => Styles().textStyles?.getTextStyle('widget.dialog.message.medium.thin') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textLight);
    static TextStyle get widgetDialogMessageRegularBold => Styles().textStyles?.getTextStyle('widget.dialog.message.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 20.0, color: AppColors.textLight);
    static TextStyle get widgetDialogMessageLarge => Styles().textStyles?.getTextStyle('widget.dialog.message.large') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 24.0, color: AppColors.textLight);
    static TextStyle get widgetDialogMessageLargeBold => Styles().textStyles?.getTextStyle('widget.dialog.message.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.textLight);
    static TextStyle get widgetDialogMessageDarkLargeBold => Styles().textStyles?.getTextStyle('widget.dialog.message.dark.large.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.textDark);
    static TextStyle get widgetDialogMessageDarkLarge => Styles().textStyles?.getTextStyle('widget.dialog.message.dark.large') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 24.0, color: AppColors.textDark);
    static TextStyle get widgetDialogMessageDarkMedium => Styles().textStyles?.getTextStyle('widget.dialog.message.dark.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetCardTitleLarge => Styles().textStyles?.getTextStyle('widget.card.title.large') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 24.0, color: AppColors.textPrimary);
    static TextStyle get widgetCardTitleMedium => Styles().textStyles?.getTextStyle('widget.card.title.medium') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 20.0, color: AppColors.textPrimary);
    static TextStyle get widgetCardTitleRegularBold => Styles().textStyles?.getTextStyle('widget.card.title.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 18.0, color: AppColors.textPrimary);
    static TextStyle get widgetCardTitleSmall => Styles().textStyles?.getTextStyle('widget.card.title.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetCardTitleSmallBold => Styles().textStyles?.getTextStyle('widget.card.title.small.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textPrimary);
    static TextStyle get widgetCardTitleTiny => Styles().textStyles?.getTextStyle('widget.card.title.tiny') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textPrimary);
    static TextStyle get widgetCardTitleTinyBold => Styles().textStyles?.getTextStyle('widget.card.title.tiny.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 14.0, color: AppColors.textPrimary);
    static TextStyle get widgetCardDetailRegularVariant => Styles().textStyles?.getTextStyle('widget.card.detail.regular_variant') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailRegular => Styles().textStyles?.getTextStyle('widget.card.detail.regular') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailRegularBold => Styles().textStyles?.getTextStyle('widget.card.detail.regular.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailMedium => Styles().textStyles?.getTextStyle('widget.card.detail.medium') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 16.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailSmallVariant => Styles().textStyles?.getTextStyle('widget.card.detail.small_variant') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailSmallVariant2 => Styles().textStyles?.getTextStyle('widget.card.detail.small_variant2') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 14.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailSmall => Styles().textStyles?.getTextStyle('widget.card.detail.small') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 14.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailTiny => Styles().textStyles?.getTextStyle('widget.card.detail.tiny') ?? TextStyle(fontFamily: AppFontFamilies.regular, fontSize: 12.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailTinyBold => Styles().textStyles?.getTextStyle('widget.card.detail.tiny.bold') ?? TextStyle(fontFamily: AppFontFamilies.bold, fontSize: 12.0, color: AppColors.textDark);
    static TextStyle get widgetCardDetailTinyVariant2 => Styles().textStyles?.getTextStyle('widget.card.detail.tiny_variant2') ?? TextStyle(fontFamily: AppFontFamilies.medium, fontSize: 12.0, color: AppColors.textDark);
}

class AppImages {
    static UiImage get home => Styles().images?.getImage('home') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf015","type":"fa.icon","weight":"solid","size":18.0,"color":"iconPrimary"}));
    static UiImage get bug => Styles().images?.getImage('bug') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf188","type":"fa.icon","weight":"solid","size":18.0,"color":"iconPrimary"}));
    static UiImage get notification => Styles().images?.getImage('notification') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf0f3","type":"fa.icon","weight":"solid","size":18.0,"color":"iconPrimary"}));
    static UiImage get profile => Styles().images?.getImage('profile') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf2bd","type":"fa.icon","weight":"solid","size":18.0,"color":"iconPrimary"}));
    static UiImage get chevronUp => Styles().images?.getImage('chevron-up') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf077","type":"fa.icon","weight":"solid","size":18.0,"color":"iconPrimary"}));
    static UiImage get chevronDown => Styles().images?.getImage('chevron-down') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf078","type":"fa.icon","weight":"solid","size":18.0,"color":"iconPrimary"}));
    static UiImage get chevronLeft => Styles().images?.getImage('chevron-left') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf053","type":"fa.icon","weight":"solid","size":18.0,"color":"iconPrimary"}));
    static UiImage get chevronRight => Styles().images?.getImage('chevron-right') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf054","type":"fa.icon","weight":"solid","size":18.0,"color":"iconPrimary"}));
    static UiImage get close => Styles().images?.getImage('close') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf00d","type":"fa.icon","weight":"solid","size":24.0,"color":"iconPrimary"}));
    static UiImage get retryMedium => Styles().images?.getImage('retry-medium') ?? UiImage(spec: ImageSpec.fromJson({"src":"0xf2f9","type":"fa.icon","weight":"solid","size":18.0,"color":"iconMedium"}));
}
